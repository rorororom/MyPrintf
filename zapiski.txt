nasm -f macho64 myPrintf.s -o myPrintf.o
clang -c main.c -o main.o
clang main.o myPrintf.o -o app -Wl,-no_pie
./app

В общем случае, первые шесть целочисленных аргументов передаются через регистры RDI, RSI, RDX, RCX, R8, и R9.
Если есть еще аргументы, они помещаются в стек в обратном порядке.

В момент вызова функции SubFunc, аргументы a и b будут храниться в регистрах rdi и rsi соответственно.

Регистр rbp (Base Pointer) обычно используется для указания на текущий адрес базы стека,
который указывает на начало текущего стекового фрейма или текущей функции.
Он часто используется для доступа к локальным переменным и параметрам функции.

Регистр rsp (Stack Pointer) указывает на текущий верх стека.
Он используется для управления стеком, включая выделение и освобождение памяти в стеке,
передачу аргументов функции и возврат адресов вызовов.

SwitchTable - это таблица переключения (или таблица переходов),
которая используется для определения соответствующей функции обработки формата в функции MyPrintf.
Каждый элемент таблицы содержит указатель на функцию обработки для определенного типа формата.

------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------
rsp (Stack Pointer):
rsp указывает на текущий верхний конец стека.
Используется для работы с элементами стека: добавления (push) и удаления (pop) элементов,
а также для доступа к локальным переменным и параметрам функций.
rsp изменяется во время операций добавления и удаления элементов стека.

rbp (Base Pointer):
rbp обычно используется для ссылки на начало фрейма стека (stack frame) текущей функции.
Используется для доступа к локальным переменным и параметрам функции.
rbp сохраняется на стеке при входе в функцию и восстанавливается перед выходом из нее.
Когда функция создает свой фрейм стека, rbp часто инициализируется значением rsp,
а затем может использоваться для доступа к локальным переменным и
параметрам функции по смещениям относительно базового указателя стека (rbp).
------------------------------------------------------------------------------------------

Таким образом, основное различие между rbp и rsp заключается в их предназначении:
rsp используется для управления стеком (добавление и удаление элементов),
а rbp используется для доступа к локальным переменным и параметрам функции внутри ее фрейма стека.

------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------
Обычно в x86-64 используются следующие регистры для передачи аргументов:

RDI (для первого аргумента)
RSI (для второго аргумента)
RDX (для третьего аргумента)
RCX (для четвёртого аргумента)
R8 (для пятого аргумента)
R9 (для шестого аргумента)
Если количество аргументов превышает количество регистров, то оставшиеся аргументы передаются через стек.
------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------

//lldb app

    mov rax, 0x2000004  ; Системный вызов sys_write
    mov rdi, 1           ; Файловый дескриптор stdout
    mov rdx, msg_len     ; Длина сообщения
    mov rsi, message     ; Адрес сообщения
    syscall              ; Вызов ядра
    ;ret                  ; Возвращаем управление


("%d %s %x %d%%%c%b\n", -1, "love", 3802, 100, 33, 127);
